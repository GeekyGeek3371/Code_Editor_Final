{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/fileExplorer.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","FileExplorer","ishtm","sethtm","iscss","setcss","isjs","setjs","App","html","setHtml","css","setCss","js","setJs","srcDoc","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAOe,SAASA,EAAOC,GAC3B,IACIC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAEJ,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OAEI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAG,aAA9C,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACIO,QAAS,kBAAIF,GAAQ,SAAAG,GAAQ,OAAKA,MADtC,oBAIJ,cAAC,aAAD,CACIC,eAdZ,SAAsBC,EAAOC,EAAKV,GAC9BC,EAASD,IAcDA,MAAOA,EACPK,UAAU,sBACVM,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMhB,EAENiB,aAAa,EACbC,MAAO,iBCpCZ,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAFK,cAEkBF,EAE7B,EAA0BhB,oBAAS,WAC/B,IAAMmB,EAAYC,aAAaC,QAAQH,GACvC,OAAc,MAAXC,EAAuBG,KAAKC,MAAMJ,GAEV,oBAAjBF,EACCA,IAEAA,KAPf,mBAAOnB,EAAP,KAAc0B,EAAd,KAeA,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU7B,MACnD,CAACoB,EAAYpB,IAER,CAACA,EAAO0B,GClBJ,SAASI,IACpB,MAAwB5B,oBAAS,GAAjC,mBAAO6B,EAAP,KAAcC,EAAd,KACA,EAAwB9B,oBAAS,GAAjC,mBAAO+B,EAAP,KAAcC,EAAd,KACA,EAAsBhC,oBAAS,GAA/B,mBAAOiC,EAAP,KAAaC,EAAb,KAiBA,OACI,mCACI,sBAAK/B,UAAU,aAAf,UACI,uCACA,+BACI,oBAAIA,UAAW0B,EAAQ,OAAQ,KACnDzB,QArBsB,WACd0B,GAAQD,GACRG,GAAO,GACPE,GAAM,IAiBM,wBAEA,oBAAI/B,UAAW4B,EAAQ,MAAO,KAC5C3B,QAlBgB,WACd0B,GAAO,GACPE,GAAQD,GACRG,GAAM,IAcM,uBAEA,oBAAI/B,UAAW8B,EAAO,KAAM,KAC1C7B,QAfe,WACb0B,GAAO,GACPE,GAAO,GACPE,GAAOD,IAWK,8BC0BLE,MArDf,WACE,MAAwBpB,EAAgB,OAAO,IAA/C,mBAAOqB,EAAP,KAAaC,EAAb,KACA,EAAsBtB,EAAgB,MAAM,IAA5C,mBAAOuB,EAAP,KAAYC,EAAZ,KACA,EAAoBxB,EAAgB,KAAK,IAAzC,mBAAOyB,EAAP,KAAWC,EAAX,KAIMC,EAAM,oCAEAN,EAFA,iCAGCE,EAHD,mCAIEE,EAJF,+BAQZ,OACE,qCAEA,sBAAKrC,UAAU,gBAAf,UACA,cAAC,EAAD,IACA,cAACT,EAAD,CACAE,SAAS,MACTC,YAAY,aACZC,MAAOsC,EACPrC,SAAUsC,IAEV,cAAC3C,EAAD,CACAE,SAAS,MACTC,YAAY,YACZC,MAAOwC,EACPvC,SAAUwC,IAEV,cAAC7C,EAAD,CACAE,SAAS,KACTC,YAAY,WACZC,MAAO0C,EACPzC,SAAU0C,OAGV,qBAAKtC,UAAU,OAAf,SACE,wBACEuC,OAAUA,EACVC,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eC7CfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.681996c0.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport {Controlled as ControlledEditor} from 'react-codemirror2-react-17'\nexport default function Editor(props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange,\n    } = props\n    const [open, setOpen] = useState(true)\n    function handleChange(editor,data,value){\n        onChange(value)\n    }\n\n    return (\n       \n        <div className={`editor-container ${open ? '':'collapsed'}`}>\n            <div className=\"editor-title\">\n                {displayName}\n                <button\n                    onClick={()=>setOpen(prevOpen => !prevOpen)}\n                >O/C</button>\n            </div>\n            <ControlledEditor\n                onBeforeChange={handleChange}\n                value={value}\n                className=\"code-mirror-wrapper\"\n                options={{\n                    lineWrapping: true,\n                    lint: true,\n                    mode: language,\n                    \n                    lineNumbers: true,\n                    theme: 'material',\n                }}\n            />\n        </div>\n        \n    )\n}\n","import React, {useEffect,useState} from 'react'\nconst PREFIX = 'code-editor'\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key\n    \n    const [value, setValue] = useState(()=>{\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if(jsonValue!=null)return JSON.parse(jsonValue)\n\n        if(typeof initialValue === 'function'){\n            return initialValue()\n        }else{\n            return initialValue\n        }\n    })\n\n    useEffect(()=>{\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    },[prefixedKey,value])\n    \n    return [value, setValue]\n}\n","import React, {useState, useEffect} from 'react'\n\nexport default function FileExplorer() {\n    const [ishtm, sethtm] = useState(false);\n    const [iscss, setcss] = useState(false);\n    const [isjs, setjs] = useState(false);\n\n    const toggleHtm = () => {\n        sethtm(!ishtm);\n        setcss(false);\n        setjs(false);\n    };\n    const toggleCss = () => {\n        sethtm(false)\n        setcss(!iscss);\n        setjs(false)\n    };\n    const toggleJs = () => {\n        sethtm(false)\n        setcss(false);\n        setjs(!isjs);\n    };\n    return (\n        <>\n            <div className=\"fileExplor\">\n                <h1>Files</h1>\n                <ul>\n                    <li className={ishtm ? 'html': null} \nonClick={toggleHtm} >index.html</li>\n                    <li className={iscss ? 'css': null} \n      onClick={toggleCss} >index.css</li>\n                    <li className={isjs ? 'js': null} \n      onClick={toggleJs} >index.js</li>\n                </ul>\n            </div>\n\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport FileExplore from './fileExplorer'\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html','')\n  const [css, setCss] = useLocalStorage('css','')\n  const [js, setJs] = useLocalStorage('js','')\n\n  \n\n  const srcDoc = `\n    <html>\n      <body>${html}</body>\n      <style>${css}</style>\n      <script>${js}</script>\n    </html>\n  `\n\n  return (\n    <>\n    \n    <div className=\"pane top-pane\">\n    <FileExplore/>\n    <Editor\n    language=\"xml\"\n    displayName=\"index.html\"\n    value={html}\n    onChange={setHtml}\n    />\n    <Editor\n    language=\"css\"\n    displayName=\"index.css\"\n    value={css}\n    onChange={setCss}\n    />\n    <Editor\n    language=\"js\"\n    displayName=\"index.js\"\n    value={js}\n    onChange={setJs}\n    />\n    </div>\n    <div className=\"pane\">\n      <iframe \n        srcDoc = {srcDoc}\n        title=\"output\"\n        sandbox=\"allow-scripts\"   //ensure that when we run a codepen application it does not access other things like doc cookie\n        frameBorder=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}